Este es un listado de las observaciones a los programadores

HOLA muchachos:
Hemos estado revisando las entregas 4 y 5 y para poder emitir una
calificación necesito que me sustenten cómo diseñaron e implementaron
algunas funcionalidades del sistema (ej: la definición de los integrantes
de cada ronda en un torneo, el cálculo del valor del alquiler de juegos
solicitados por un usuario etc.)
Como ustedes no tienen un manejo de clases que representen los diferentes
objetos del mundo real (juegos, usuarios, rondas etc)a nivel de la capa de
la lógica, es muy difícil establecer cómo hacen las cosas. Pues
prácticamente su diseño se concentró en trabajar con clases de la capa de
la interfaz, unas cuantas fachadas a nivel de la lógica y el manejo de la
información la concentraron directamente en la base de datos.
El próximo miércoles a las 11 a.m. los espero (al grupo) para hacer la
sustentación correspondiente.
Daniel, por favor, envíele copia a sus compañeros de este mensaje y
asegúrese que lo reciban.
Saludos,
María Eugenia Valencia

src
---


lib
---


admin-module
------------


clients-module
--------------
- El campo de friend identification deberia tener la lista de las actuales personas, cuando es elegido que se llenen los campos respectivos o dejar añadir uno nuevo.
- Hacer la documentacion en el .h
- Para modify se puede hacer un metodo dentro del formulario que reciba la llave y se llene asi mismo
- Friend id no dice nada
- No necesitamos el estado del conocido, ni su foto
- Reimplementar slotFilter
- El nombre no es llave primaria, por lo que dos personas pueden tener el mismo nombre
- Los clientes no se adicionan correctamente, tampoco se insertan en la lista
- No subir cambios al svn hasta asegurarse que compile y este terminado algo especifico, tampoco subir cambios que puedan comprometer la compilacion
- No utilizar mas "emit sendQuery", lo recomendables es utilizar KLDM para hacer consultas y obtener directamente los errores
- Loggear errores e informaciones, etc




games-module
------------
- Validar entradas, en este momento se pueden entrar valores vaciones a la base de datos!
- Delete no borra en la base de datos!!
- Las consultas no se hacen correctamente ( solo hay que poner la consulta sobre ldt_games y no sobre ldt_users, sobre ldt_games funciona correctamente).
- Hacer que cancelar cierre el formulario
- La nueva base de datos tiene un campo "disponible" (available en ingles) para decir si el juego esta disponible o no, añadir a el formulario esta posibilidad y ademas insertarlo en la base de datos, podemos utilizar triggers para cambiar el valor de esta variable por ejemplo cuando se registra un juego con un torneo o se alquila, etc...
- Terminar el funcionamiento
- Leer las observaciones de clients-module y seguir las que se ajusten

rents-module
------------


tournament-module
-----------------




